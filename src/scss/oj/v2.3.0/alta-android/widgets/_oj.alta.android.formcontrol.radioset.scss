// Copyright (c) 2014, 2017, Oracle and/or its affiliates. The Universal Permissive License (UPL), Version 1.0
@import "../../utilities/oj.utilities";


// ----- start dependencies ---------

// set up include variables before importing dependencies
@if $includeRadiosetClasses != false {
  $includePopupClasses:             true !global;
  $includeLabelClasses:             true !global;
  $includeMessagingClasses:         true !global;
  $includeFormControlCommonClasses: true !global;
  $includeIconClasses: true !global;
}

// import dependencies
@import "../../common/helpers/oj.common.helpers";
@import "oj.alta.android.messaging";
@import "oj.alta.android.popup";
@import "oj.alta.android.formcontrol.label";
@import "oj.alta.android.formcontrol.common";
@import "oj.alta.android.icons";

// ----- end dependencies ---------


// import classes defined in the common directory
@import "../../common/widgets/oj.common.formcontrol.radioset";


@if $includeRadiosetClasses != false {
  @include module-include-once("alta.android.radioset") {

    @if($radioCheckboxRenderInputAs == 'backgroundImage') {

      // background-size to scale image size as the font size changes
      .oj-radio-label .oj-radiocheckbox-icon,
      .oj-checkbox-label .oj-radiocheckbox-icon {
        width: $radioCheckboxRowHeight;
        height: $radioCheckboxRowHeight;
      }  
      
      // this renders selectors to position using margins the oj-radiocheckbox-icon. 
      // It depends on $radioCheckboxLabelPosition, and image-first selectors
      @include oj-radiocheckbox-image-margin(0);
      
      // if label is first, give some padding to the start
      // this overrides what we have in common that is used for ios and windows. for ios
      // and windows the padding is symmetrical on right and left. Not for Android since
      // Android has an icon with a 'glow' around it when active, so you don't want 'outer' padding
      // on the icon side of the label.
      .oj-radio-label,
      .oj-checkbox-label,
      .oj-checkbox-label-nocomp {
        @if($radioCheckboxLabelPosition == "start") {
          @include oj-ltr() {
            padding: 0 0 0 $radioCheckboxLabelToEdgePadding;
          }
          @include oj-rtl() {
            padding: 0 $radioCheckboxLabelToEdgePadding 0 0 ;
          }
        } @else {
          @include oj-ltr() {
            padding: 0 $radioCheckboxLabelToEdgePadding 0 0 ;
          }
          @include oj-rtl() {
            padding: 0 0 0 $radioCheckboxLabelToEdgePadding;
          }     
        }
      }
      
      .oj-checkboxset-input-end .oj-checkbox-label,
      .oj-radioset-input-end .oj-radio-label {
        @include oj-ltr() {
          padding: 0 0 0 $radioCheckboxLabelToEdgePadding;
        }
        @include oj-rtl() {
          padding: 0 $radioCheckboxLabelToEdgePadding 0 0 ;
        }
      }
      // need the @ltr only so it overrides the padding selectors above
      .oj-checkboxset-input-start .oj-checkbox-label,
      .oj-radioset-input-start .oj-radio-label {
        @include oj-ltr() {
          padding: 0 $radioCheckboxLabelToEdgePadding 0 0 ;
        }
        @include oj-rtl() {
          padding: 0 0 0 $radioCheckboxLabelToEdgePadding;
        }
      }
    }
    
    .oj-radioset .oj-choice-row:not(:first-child),
    .oj-checkboxset .oj-choice-row:not(:first-child) {
       border-top: 1px $radioCheckboxItemDividerColor solid;
    }
    
    // position radio/checkbox underneath the icon for voiceover to work
    @include oj-radiocheckbox-position-input(16px);

  }
}